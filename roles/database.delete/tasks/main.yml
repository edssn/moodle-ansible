# - name: Configure MariaDB Repo
#   ansible.builtin.shell: curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | bash -s -- --mariadb-server-version="mariadb-10.11"
#   args:
#     warn: false
#   notify:
#     - update packages

# - name: Install MariaDB Packages
#   ansible.builtin.package:
#     name:
#       - MariaDB-client
#       - MariaDB-common
#       - MariaDB-server
#     state: latest
#     update_cache: yes

- name: Enable MariaDB Service
  ansible.builtin.systemd:
    enabled: true
    name: mariadb

- name: Start MariaDB Service
  ansible.builtin.systemd:
    state: started
    name: mariadb

- name: Start MariaDB Service
  ansible.builtin.systemd:
    state: started
    name: mariadb

# - name: Run mysql_upgrade
#   ansible.builtin.command: mysql_upgrade -u root --force


- name: Check if a custom root password is specified
  debug:
    msg: >
      Warning!! the MariaDB root password was left empty. Please set a custom
      password with role variable mariadb_root_password to secure your database
      server!
  # when: not mariadb_root_password
  # tags: mariadb


- name: Is root password set?
  ansible.builtin.expect:
    command: mysql -u root -p --execute "SELECT NOW()"
    responses:
      Question:
        - response1

- name: Is root password set?
  command: mysql -u root --execute "SELECT NOW()"
  register: is_root_password_set
  ignore_errors: yes

- name: Generate mysql root password
  shell: cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 13
  register: mysql_root_password
  when: is_root_password_set.rc == 0

- name: Inform user of mysql root password
  debug:
    msg: "MariaDB root password was set to {{mysql_root_password.stdout}}"
  when: is_root_password_set.rc == 0

# - name: Run mysql_secure_installation
#   ansible.builtin.expect:
#     command: mariadb-secure-installation
#     responses:
#       Question:
#         - response1
#         - response2
#         - response3